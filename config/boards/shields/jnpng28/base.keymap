// This file is automatically generated by /Users/jpshi/Git/zmk-config/auto.sh from config/base.keymap

//╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮
//     (LT5)         K22 (LT4)         K18 (LT3)         K18 (LT2)         K22 (LT1)             (LT0)                                           (LT0)         K22 (LT1)         K18 (LT2)         K18 (LT3)         K22 (LT4)             (LT5)
//├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤                                 ├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
//     (LM5)         K18 (LM4)         K18 (LM3)         K18 (LM2)         K18 (LM1)             (LM0)                                           (LM0)         K18 (LM1)         K18 (LM2)         K18 (LM3)         K18 (LM4)             (LM5)
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤
//     (LB5)         K28 (LB4)         K28 (LB3)         K28 (LB2)         K18 (LB1)             (LB0)                                           (LB0)         K18 (LB1)         K28 (LB2)         K28 (LB3)         K28 (LB4)             (LB5)
//╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
//                                                                         K18 (LH2)         K18 (LH1)           (LH0)           (LH0)       K18 (LH1)         K18 (LH2)
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "../../../zmk-helpers/helper.h"

//////////////////////////////
// Global Behavior
//////////////////////////////

#define TAP_MS       200
#define SHORT_TAP_MS 165

&sl {
    release-after-ms = <5000>;
    // quick-release;
};

&sk {
    release-after-ms = <5000>;
    // quick-release;
};

#define MAKE_HRM(                         \
    NAME ,                                \
    HOLD , TAP                            \
    )                                     \
    ZMK_BEHAVIOR(                         \
        NAME,                             \
        hold_tap,                         \
        flavor = "balanced";              \
        tapping-term-ms = <TAP_MS>;       \
        quick-tap-ms = <TAP_MS>;          \
        require-prior-idle-ms = <TAP_MS>; \
        bindings = <HOLD>, <TAP>;         \
    )
MAKE_HRM(hold_sk, &sk, &kp)

#define SHIFT_KEY(                                       \
    NAME       ,                                         \
    TAP_ACT    , TAP    ,                                \
    SHIFT_ACT  , TAPTAP                                  \
    )                                                    \
    ZMK_BEHAVIOR(                                        \
        NAME,                                            \
        mod_morph,                                       \
        bindings = <&TAP_ACT TAP> , <&SHIFT_ACT TAPTAP>; \
        mods = <(MOD_LCTL)>;                             \
    )

#define TAP_TAP(                                          \
    NAME       ,                                          \
    TAP_ACT    , TAP    ,                                 \
    TAPTAP_ACT , TAPTAP                                   \
    )                                                     \
    ZMK_BEHAVIOR(                                         \
        NAME,                                             \
        tap_dance,                                        \
        tapping-term-ms = <TAP_MS>;                       \
        bindings = <&TAP_ACT TAP> , <&TAPTAP_ACT TAPTAP>; \
    )

//////////////////////////////
// Layer Definition
//////////////////////////////

#define DEF 0
#define NUM 1
#define FOO 2
#define BAR 3
#define FUN 4
#define BLU 5

//////////////////////////////
// Ctrl
//////////////////////////////

// <C-h>: <Backspace>
ZMK_BEHAVIOR(bd, mod_morph,
    bindings = <&kp BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT)>;
)
ZMK_BEHAVIOR(mm_h, mod_morph,
    bindings = <&kp H>, <&bd>;
    mods = <(MOD_LCTL)>;
)
// <C-i>: <Tab>
ZMK_BEHAVIOR(mm_i, mod_morph,
    bindings = <&kp I>, <&kp TAB>;
    mods = <(MOD_LCTL)>;
)
// <C-j>: <Enter> (LF)
ZMK_BEHAVIOR(mm_j, mod_morph,
    bindings = <&hold_sk LGUI J>, <&kp RET>;
    mods = <(MOD_LCTL)>;
)
// <C-m>: <Enter> (CR)
// <C-[>: <Esc>
ZMK_BEHAVIOR(mm_lbkt, mod_morph,
    bindings = <&kp LBKT>, <&kp ESC>;
    mods = <(MOD_LCTL)>;
)

// <C-f>: <RIGHT>
ZMK_BEHAVIOR(mm_f, mod_morph,
    bindings = <&hold_sk LSHFT F>, <&kp RIGHT>;
    mods = <(MOD_LCTL)>;
)
// <C-b>: <LEFT>
ZMK_BEHAVIOR(mm_b, mod_morph,
    bindings = <&kp B>, <&kp LEFT>;
    mods = <(MOD_LCTL)>;
)
// <C-p>: <UP>
ZMK_BEHAVIOR(mm_p, mod_morph,
    bindings = <&kp P>, <&kp UP>;
    mods = <(MOD_LCTL)>;
)
// <C-n>: <DOWN>
ZMK_BEHAVIOR(mm_n, mod_morph,
    bindings = <&lt BAR N>, <&kp DOWN>;
    mods = <(MOD_LCTL)>;
)
// <C-a>: <HOME>
ZMK_BEHAVIOR(mm_a, mod_morph,
    bindings = <&hold_sk LGUI A>, <&kp HOME>;
    mods = <(MOD_LCTL)>;
)
// <C-e>: <END>
ZMK_BEHAVIOR(mm_e, mod_morph,
    bindings = <&kp E>, <&kp END>;
    mods = <(MOD_LCTL)>;
)

//////////////////////////////
// DEF
//////////////////////////////

////////////////////
// combos
////////////////////

// ZMK_COMBO(0           , &kp 0               , LT3 LM3 , DEF , COMBO_TERM)
ZMK_COMBO(y           , &kp Y               , LT2 LM2 , DEF , COMBO_TERM)
// ZMK_COMBO(0           , &kp 0               , RT2 RM2 , DEF , COMBO_TERM)
// ZMK_COMBO(0           , &kp 0               , RT3 RM3 , DEF , COMBO_TERM)

ZMK_COMBO(g           , &kp G               , LM1 LB1 , DEF , COMBO_TERM)
ZMK_COMBO(b           , &mm_b               , RM1 RB1 , DEF , COMBO_TERM)

ZMK_COMBO(comma       , &kp COMMA           , LH1 LH0 , DEF , COMBO_TERM)
ZMK_COMBO(dot         , &kp DOT             , RH0 RH1 , DEF , COMBO_TERM)

//////////

ZMK_COMBO(lbkt        , &kp LBKT            , LM2 LM1 , DEF , COMBO_TERM)
ZMK_COMBO(rbkt        , &kp RBKT            , RM1 RM2 , DEF , COMBO_TERM)

////////////////////

ZMK_LAYER(DEF,
//╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮
                     &kp Q             &kp W             &mm_e             &kp R                                                                               &kp U             &mm_i             &kp O             &mm_p                
//                                                       +ctrl=End                                                                                                               +ctrl=Tab                           +ctrl=Up
//├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤                                 ├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤
//                                     NUY               Y                                                                                                                       NUY               NUY
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
                     &mm_a             &hold_sk LALT S   &hold_sk LCTRL D  &mm_f                                                                               &hold_sk LSHFT T  &hold_sk LCTRL K  &hold_sk LALT L   &mm_j                
//                   +ctrl=HOME                                            +ctrl=Right                                                                                                                               +ctrl=Return
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//                                                                     [/х                                                                                                   ]/ъ
//                                                                         G                                                                                   B - +ctrl=Left
//├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤
                     &kp Z             &kp X             K28               &kp V                                                                               &mm_h             K28               K28               K28                  
//                                                                                                                                                             +ctrl=Backspace
//╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           &lt NUM SPACE     &lt FOO C                                       &mm_n             &lt FUN M
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
//                                                                                       ,/б                                                 +ctrl=Down    ./ю
)

//////////////////////////////
// NUM
//////////////////////////////

////////////////////
// combos
////////////////////

// ZMK_COMBO(0           , &kp 0              , LT3 LM3 , NUM , COMBO_TERM)
// ZMK_COMBO(0           , &kp 0              , LT2 LM2 , NUM , COMBO_TERM)
// ZMK_COMBO(0           , &kp 0              , RT2 RM2 , NUM , COMBO_TERM)
// ZMK_COMBO(0           , &kp 0              , RT3 RM3 , NUM , COMBO_TERM)

// ZMK_COMBO(0           , &kp 0              , LM1 LB1 , NUM , COMBO_TERM)
// ZMK_COMBO(0           , &kp 0              , RM1 RB1 , NUM , COMBO_TERM)

// ZMK_COMBO(0           , &kp 0              , LH1 LH0 , NUM , COMBO_TERM)
// ZMK_COMBO(0           , &kp 0              , RH0 RH1 , NUM , COMBO_TERM)

//////////

ZMK_COMBO(apos        , &kp APOS           , LM2 LM1 , NUM , COMBO_TERM)

////////////////////

ZMK_LAYER(NUM,
//╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮
                     K22               &kp MINUS         &kp EQUAL         K22                                                                                 K22               &kp BSLH          &kp GRAVE         K22                  
//                                                                                                                                                                               \/ё
//├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤                                 ├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤
//                                     NUY               NUY                                                                                                                     NUY               NUY
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
                     &hold_sk LGUI N1  &hold_sk LALT N2  &hold_sk LCTRL N3 &hold_sk LSHFT N4                                                                   &hold_sk LSHFT N7 &hold_sk LCTRL N8 &hold_sk LALT N9  &hold_sk LGUI N0     
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//                                                                     '/э
//                                                                         NUY                                                                                 NUY 
//├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤
                     K28               K28               K28               &kp N5                                                                              &kp N6            K28               K28               K28                  
//╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           &trans            &trans                                          &kp FSLH          &kp SEMI
//                                                                                                                                           /                 ;/ж
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
//                                                                                       NUY                                                               NUY
)

//////////////////////////////
// FOO
//////////////////////////////

ZMK_LAYER(FOO,
//╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮
                     K22               K18               K18               K22                                                                                 K22               K18               K18               K22                  
//├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤                                 ├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
                     K18               K18               K18               K18                                                                                 K18               K18               K18               K18                  
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤
                     K28               K28               K28               K18                                                                                 K18               K28               K28               K28                  
//╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           &trans            &trans                                          &trans            &trans
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// BAR
//////////////////////////////

ZMK_LAYER(BAR,
//╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮
                     K22               K18               K18               K22                                                                                 K22               K18               K18               K22                  
//├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤                                 ├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
                     K18               K18               K18               K18                                                                                 K18               K18               K18               K18                  
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤
                     K28               K28               K28               K18                                                                                 K18               K28               K28               K28                  
//╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           &trans            &trans                                          &trans            &trans
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// FUN
//////////////////////////////

////////////////////
// combos
////////////////////

// ZMK_COMBO(0           , &kp 0              , LT3 LM3 , FUN , COMBO_TERM)
ZMK_COMBO(mute        , &kp C_MUTE         , LT2 LM2 , FUN , COMBO_TERM)
// ZMK_COMBO(0           , &kp 0              , RT2 RM2 , FUN , COMBO_TERM)
// ZMK_COMBO(0           , &kp 0              , RT3 RM3 , FUN , COMBO_TERM)

ZMK_COMBO(pp          , &kp C_PP           , LM1 LB1 , FUN , COMBO_TERM)
// ZMK_COMBO(0           , &kp 0              , RM1 RB1 , FUN , COMBO_TERM)

// ZMK_COMBO(0           , &kp 0              , LH1 LH0 , FUN , COMBO_TERM)
// ZMK_COMBO(0           , &kp 0              , RH0 RH1 , FUN , COMBO_TERM)

////////////////////

ZMK_LAYER(FUN,
//╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮
                     K22               &kp C_BRI_UP      &kp C_VOL_UP      K22                                                                                 K22               K18               K18                   K22                  
//├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤                                 ├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤
//                                                       C_MUTE
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
                     K18               &kp C_BRI_DN      &kp C_VOL_DN      &kp C_NEXT                                                                          &kp PG_UP         K18               K18               &kp LG(LC(Q))        
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//                                                                         C_PP
//├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤
                     K28               K28               K28               &kp C_PREV                                                                          &kp PG_DN         K28               K28               K28                  
//╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           &trans            &trans                                          &trans            &trans
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// BLU
//////////////////////////////

ZMK_CONDITIONAL_LAYER(FOO BAR, BLU)

ZMK_LAYER(BLU,
//╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────╮   ╭─────────────╮
                     K22               &bt BT_CLR        &bootloader       K22                                                                                 K22               &bootloader       &bt BT_CLR        K22                  
//├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤                                 ├─────────────┤   ╰─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────╯   ├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
                     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4                                                                        &bt BT_SEL 7      &bt BT_SEL 8      &bt BT_SEL 9      &bt BT_SEL 0         
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤
                     &kp N0            K28               K28               &bt BT_SEL 5                                                                        &bt BT_SEL 6      K28               K28               K28                  
//╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           &trans            &trans                                          &trans            &trans
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
)
